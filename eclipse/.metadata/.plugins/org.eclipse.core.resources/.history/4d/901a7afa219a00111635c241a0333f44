package net.minecraft.src.powerc.network;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;

import net.minecraft.src.TileEntity;
import net.minecraft.src.World;
import net.minecraft.src.wifi.BlockRedstoneWireless;
import net.minecraft.src.wifi.TileEntityRedstoneWireless;
import net.minecraft.src.wifi.TileEntityRedstoneWirelessR;
import net.minecraft.src.wifi.TileEntityRedstoneWirelessT;
import net.minecraft.src.wifi.WirelessRedstone;
import net.minecraft.src.wifi.network.PacketIds;
import net.minecraft.src.wifi.network.PacketPayload;
import net.minecraft.src.wifi.network.PacketUpdate;

public class PacketPowerConfig extends PacketUpdate {
	public boolean state = false;
	
	public PacketPowerConfig() {
		super(PacketIds.WIFI_POWERC);
	}
	
	public PacketPowerConfig(TileEntity inv) {
		this();
		xPosition = inv.xCoord;
		yPosition = inv.yCoord;
		zPosition = inv.zCoord;
		PacketPayload p = new PacketPayload(1,1,1);
		p.stringPayload[0] = "";
		p.intPayload[0] = 0;
		p.floatPayload[0] = 0;
		this.payload = p;
	}
	
	public PacketPowerConfig(TileEntityRedstoneWireless entity, World world)
	{
		this();
		this.xPosition = entity.getBlockCoord(0);
		this.yPosition = entity.getBlockCoord(1);
		this.zPosition = entity.getBlockCoord(2);
		PacketPayload p = new PacketPayload(1,1,2);
		p.stringPayload[0] = entity.getFreq();
		
		if ( entity instanceof TileEntityRedstoneWirelessR) {
			this.state = ((BlockRedstoneWireless)WirelessRedstone.blockWirelessR).getState(world, this.xPosition, this.yPosition, this.zPosition);
			p.stringPayload[1] = "addReceiver";
		} else if ( entity instanceof TileEntityRedstoneWirelessT) {
			this.state = ((BlockRedstoneWireless)WirelessRedstone.blockWirelessT).getState(world, this.xPosition, this.yPosition, this.zPosition);
			p.stringPayload[1] = "addTransmitter";
		}
		p.intPayload[0] = 0;
		p.floatPayload[0] = 0;
		this.payload = p;
	}
	
	public PacketPowerConfig(TileEntityRedstoneWireless entity)
	{
		this();
		this.xPosition = entity.getBlockCoord(0);
		this.yPosition = entity.getBlockCoord(1);
		this.zPosition = entity.getBlockCoord(2);
		PacketPayload p = new PacketPayload(1,1,2);
		int[] dataInt = new int[1];
		float[] dataFloat = new float[1];
		String[] dataString = new String[2];
		dataInt[0] = 0;
		dataFloat[0] = 0;
		dataString[0] = entity.getFreq();
		dataString[1] = "fetchTile";
		p.intPayload = dataInt;
		p.floatPayload = dataFloat;
		p.stringPayload = dataString;
		this.payload = p;
	}

	public String toString() {
		return this.payload.stringPayload[1]+"("+xPosition+","+yPosition+","+zPosition+")["+this.payload.stringPayload[0]+"]:"+state;
	}
	
	public String getFreq()
	{
		return this.payload.stringPayload[0];
	}
	
	public String getCommand()
	{
		return this.payload.stringPayload[1];
	}
	
	public void setPosition(int i, int j, int k) {
		this.xPosition = i;
		this.yPosition = j;
		this.zPosition = k;
	}

	public void setFreq(Object freq) {
		this.payload.stringPayload[0] = freq.toString();
	}

	public void setState(boolean state) {
		this.state = state;
	}

	@Override
	public void readData(DataInputStream datainputstream)
			throws IOException {
		super.readData(datainputstream);
		state = datainputstream.readBoolean();
	}

	@Override
	public void writeData(DataOutputStream dataoutputstream)
			throws IOException {
		super.writeData(dataoutputstream);
		dataoutputstream.writeBoolean(state);
	}
	
}
