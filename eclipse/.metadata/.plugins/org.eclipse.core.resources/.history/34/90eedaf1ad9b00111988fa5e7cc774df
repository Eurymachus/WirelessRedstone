/*    
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>
*/
package net.minecraft.src;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;

import net.minecraft.client.Minecraft;
import net.minecraft.src.wifiremote.ItemRedstoneWirelessRemote;
import net.minecraft.src.wifiremote.ThreadWirelessRemote;

public class mod_WirelessRemote extends BaseMod {
	public static Item itemRemote;
	public static int remoteID=6245;
	
	public static long pulseTime=1000;
	public static boolean duraTogg=true;
	public static int maxPulseThreads=10;
	public static int pulseKey=25;
	
	public mod_WirelessRemote() {
	}

	@Override
	public void load() {
		ModLoader.addName(itemRemote, "Wireless Remote");
		ModLoader.registerKey(this, new KeyBinding("wr.PulseRemote", pulseKey), true);
	}
	
	@Override
	public String getVersion() {
		return "0.5";
	}
	
	@Override
	public void keyboardEvent(KeyBinding keybinding) {
		if ( 
				ModLoader.getMinecraftInstance().thePlayer.getCurrentEquippedItem() != null && 
				ModLoader.getMinecraftInstance().thePlayer.getCurrentEquippedItem().itemID == itemRemote.shiftedIndex
		)
			ThreadWirelessRemote.pulse(
					(int)ModLoader.getMinecraftInstance().thePlayer.posX,
					(int)ModLoader.getMinecraftInstance().thePlayer.posY,
					(int)ModLoader.getMinecraftInstance().thePlayer.posZ,
					ModLoader.getMinecraftInstance().thePlayer.getCurrentEquippedItem(),
					ModLoader.getMinecraftInstance().theWorld
			);
	}
	
	public static void loadItemTextures() {
		itemRemote.iconIndex = ModLoader.addOverride("/gui/items.png", "/WirelessSprites/remote.png");
	}

	public static void AddRecipes() {
		ModLoader.addRecipe(new ItemStack(itemRemote, 1), new Object[] {
            "i", "#", Character.valueOf('i'), Block.torchRedstoneActive, Character.valueOf('#'), mod_WirelessRedstone.blockWirelessT
        });
	}

	private static void loadConfig() {
		remoteID = (Integer) ConfigStoreRedstoneWireless.getInstance("Remote").get("ID", Integer.class, new Integer(remoteID));
		duraTogg = (Boolean) ConfigStoreRedstoneWireless.getInstance("Remote").get("Durability", Boolean.class, new Boolean(duraTogg));
		pulseTime = (Long) ConfigStoreRedstoneWireless.getInstance("Remote").get("PulseDurration", Long.class, new Long(pulseTime));
		maxPulseThreads = (Integer) ConfigStoreRedstoneWireless.getInstance("Remote").get("MaxPulseThreads", Integer.class, new Integer(maxPulseThreads));
		pulseKey = (Integer) ConfigStoreRedstoneWireless.getInstance("Remote").get("PulseKey", Integer.class, new Integer(pulseKey));
	}
	
	static {
		loadConfig();
		itemRemote = (new ItemRedstoneWirelessRemote(remoteID)).setItemName("remote");
		loadItemTextures();
		AddRecipes();
	}
}
